from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.web_app_info import WebAppInfo
import json
from config import TOKEN

bot = Bot(TOKEN)
dp = Dispatcher(bot)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
BOT_NAME = "–ê–Ω—Ç–æ–Ω–∏–æ"


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = types.ReplyKeyboardMarkup()

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup.add(types.ReplyKeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å –µ–¥—É', web_app=WebAppInfo(url='https://mxxnl1ghtx.github.io/telegram.WebApps/')))

    # –ü—Ä–∏–≤–µ—Å—Ç–≤–∏–µ –±–æ—Ç–∞
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.full_name}!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç {BOT_NAME} –∏ —è —Ç–≤–æ–π –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∑–∞–∫–∞–∑—É –µ–¥—ã —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. –î–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–º! üçï\n\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É —á—Ç–æ–±—ã –∑–∞–∫–∫–∞–∑–∞—Ç—å —Å–µ–±–µ –≤–∫—É—Å–Ω–æ–π –µ–¥—ã!", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.answer('–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n/help - –°–ø—Ä–∞–≤–∫–∞\n/roll_dice - –ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫\n/play_casino - –°—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ')

@dp.message_handler(commands=['roll_dice'])
async def roll_dice(message: types.Message):
    await bot.send_dice(chat_id=message.chat.id, emoji='üé≤')

@dp.message_handler(commands=['play_casino'])
async def play_casino(message: types.Message):
    await bot.send_dice(chat_id=message.chat.id, emoji='üé∞')

@dp.message_handler(lambda message: message.text.lower() == '–ø—Ä–∏–≤–µ—Ç')
async def hello(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç!")

@dp.message_handler()
async def what(message: types.Message):
    await message.answer("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —á–µ–≥–æ –≤—ã –æ—Ç –º–µ–Ω—è —Ö–æ—Ç–∏—Ç–µ.\n\n–î–ª—è –ø–æ–º–æ—â–∏: /help")

@dp.message_handler(content_types=['web_app_data'])
async def web_app(message: types.Message):
    parsed_data = json.loads(message.web_app_data.data)
    message = ''
    for i, item in enumerate(parsed_data['items'], start=1):
        postion = int(item['id'].replace('item', ''))
        message += f'–ü–æ–∑–∏—Ü–∏—è {postion}\n'
        message == f'–°—Ç–æ–∏–º–æ—Å—Ç—å: {item['price']}\n'

    message += f'–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤: {parsed_data['totalPrice']}'

    await bot.send_message(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)